{"version":3,"sources":["webpack:///./src/views/LoginUser.vue","webpack:///src/views/LoginUser.vue","webpack:///./src/views/LoginUser.vue?f565","webpack:///./src/views/LoginUser.vue?1600","webpack:///../../../src/components/VForm/VForm.ts"],"names":["ref","attrs","on","indexOf","model","value","_vm","callback","expression","type","password","$event","links","staticRenderFns","render","name","mounted","data","email","methods","login","component","mixins","BindsAttrs","RegistrableProvide","extend","provide","form","this","inheritAttrs","props","disabled","Boolean","lazyValidation","readonly","inputs","watchers","errorBag","watch","handler","val","errors","Object","values","includes","$emit","deep","immediate","watchInput","input","watcher","$watch","$set","_uid","valid","shouldValidate","hasOwnProperty","validate","filter","length","reset","forEach","resetErrorBag","setTimeout","resetValidation","register","push","unregister","found","find","i","unwatch","$delete","h","staticClass","novalidate","attrs$","submit","e","$slots","default"],"mappings":"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","file":"js/chunk-ed34bf9c.fe91f967.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('v-card',{staticClass:\"mx-auto mt-5\",attrs:{\"width\":\"800\"}},[_c('v-card-title',[_c('h1',[_vm._v(\"Login\")])]),_c('v-card-text',[_c('v-form',{ref:\"form\",attrs:{\"lazy-validation\":\"\"}},[_c('v-text-field',{attrs:{\"rules\":[v => /.+@.+\\..+/.test(v) || 'E-mail must be valid', v => !!v || '이메일은 필수 값입니다'],\"label\":\"이메일\",\"prepend-icon\":\"mdi-account-circle\"},on:{\"keydown\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\"))return null;return _vm.login.apply(null, arguments)}},model:{value:(_vm.email),callback:function ($$v) {_vm.email=$$v},expression:\"email\"}}),_c('v-text-field',{attrs:{\"rules\":[v => !!v || '비밀번호는 필수 값입니다'],\"label\":\"비밀번호\",\"type\":\"Password\",\"prepend-icon\":\"mdi-lock\",\"append-icon\":\"mdi-eye-off\"},on:{\"keydown\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\"))return null;return _vm.login.apply(null, arguments)}},model:{value:(_vm.password),callback:function ($$v) {_vm.password=$$v},expression:\"password\"}})],1)],1),_c('v-divider'),_c('v-card-actions',[_c('v-btn',{attrs:{\"color\":\"success\"},on:{\"click\":function($event){return _vm.links('/register')}}},[_vm._v(\"Register\")]),_c('v-spacer'),_c('v-btn',{attrs:{\"color\":\"info\"},on:{\"click\":_vm.login}},[_vm._v(\" Login \")])],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-card width=\"800\" class=\"mx-auto mt-5\">\n    <v-card-title>\n      <h1>Login</h1>\n    </v-card-title>\n    <v-card-text>\n      <v-form ref=\"form\" lazy-validation>\n        <v-text-field\n            v-model=\"email\"\n            :rules=\"[v => /.+@.+\\..+/.test(v) || 'E-mail must be valid', v => !!v || '이메일은 필수 값입니다']\"\n            label=\"이메일\"\n            prepend-icon=\"mdi-account-circle\"\n            v-on:keydown.enter=\"login\"\n        ></v-text-field>\n        <v-text-field\n            v-model=\"password\"\n            :rules=\"[v => !!v || '비밀번호는 필수 값입니다']\"\n            label=\"비밀번호\"\n            type=\"Password\"\n            prepend-icon=\"mdi-lock\"\n            append-icon=\"mdi-eye-off\"\n            v-on:keydown.enter=\"login\"\n        ></v-text-field>\n      </v-form>\n    </v-card-text>\n    <v-divider></v-divider>\n    <v-card-actions>\n      <v-btn color=\"success\" v-on:click=\"links('/register')\">Register</v-btn>\n      <v-spacer></v-spacer>\n      <v-btn color=\"info\"\n             v-on:click=\"login\"\n      >\n        Login\n      </v-btn>\n    </v-card-actions>\n  </v-card>\n</template>\n\n<script>\nimport userApi from '../api/user.js'\nimport jwt from \"@/common/jwt\";\n\nexport default {\n  name: \"LoginUser\",\n  mounted() {\n    if (false === jwt.isExpired()) {\n      this.$router.push('/');\n    }\n  },\n  data: function () {\n    return {\n      email: 'owner@gmail.com',\n      password: '1234'\n    }\n  },\n  methods: {\n    links: function (url) {\n      this.$router.push(url);\n    },\n    login: async function () {\n      if (!this.$refs.form.validate()) return;\n\n      const flag = await userApi.requestLoginUser(this.email, this.password);\n\n      if (flag) await this.$router.push('/');\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LoginUser.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LoginUser.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./LoginUser.vue?vue&type=template&id=377b6425&scoped=true&\"\nimport script from \"./LoginUser.vue?vue&type=script&lang=js&\"\nexport * from \"./LoginUser.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"377b6425\",\n  null\n  \n)\n\nexport default component.exports","// Components\nimport VInput from '../VInput/VInput'\n\n// Mixins\nimport mixins from '../../util/mixins'\nimport BindsAttrs from '../../mixins/binds-attrs'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Helpers\nimport { VNode } from 'vue'\n\ntype ErrorBag = Record<number, boolean>\ntype VInputInstance = InstanceType<typeof VInput>\ntype Watchers = {\n  _uid: number\n  valid: () => void\n  shouldValidate: () => void\n}\n\n/* @vue/component */\nexport default mixins(\n  BindsAttrs,\n  RegistrableProvide('form')\n  /* @vue/component */\n).extend({\n  name: 'v-form',\n\n  provide (): object {\n    return { form: this }\n  },\n\n  inheritAttrs: false,\n\n  props: {\n    disabled: Boolean,\n    lazyValidation: Boolean,\n    readonly: Boolean,\n    value: Boolean,\n  },\n\n  data: () => ({\n    inputs: [] as VInputInstance[],\n    watchers: [] as Watchers[],\n    errorBag: {} as ErrorBag,\n  }),\n\n  watch: {\n    errorBag: {\n      handler (val) {\n        const errors = Object.values(val).includes(true)\n\n        this.$emit('input', !errors)\n      },\n      deep: true,\n      immediate: true,\n    },\n  },\n\n  methods: {\n    watchInput (input: any): Watchers {\n      const watcher = (input: any): (() => void) => {\n        return input.$watch('hasError', (val: boolean) => {\n          this.$set(this.errorBag, input._uid, val)\n        }, { immediate: true })\n      }\n\n      const watchers: Watchers = {\n        _uid: input._uid,\n        valid: () => {},\n        shouldValidate: () => {},\n      }\n\n      if (this.lazyValidation) {\n        // Only start watching inputs if we need to\n        watchers.shouldValidate = input.$watch('shouldValidate', (val: boolean) => {\n          if (!val) return\n\n          // Only watch if we're not already doing it\n          if (this.errorBag.hasOwnProperty(input._uid)) return\n\n          watchers.valid = watcher(input)\n        })\n      } else {\n        watchers.valid = watcher(input)\n      }\n\n      return watchers\n    },\n    /** @public */\n    validate (): boolean {\n      return this.inputs.filter(input => !input.validate(true)).length === 0\n    },\n    /** @public */\n    reset (): void {\n      this.inputs.forEach(input => input.reset())\n      this.resetErrorBag()\n    },\n    resetErrorBag () {\n      if (this.lazyValidation) {\n        // Account for timeout in validatable\n        setTimeout(() => {\n          this.errorBag = {}\n        }, 0)\n      }\n    },\n    /** @public */\n    resetValidation () {\n      this.inputs.forEach(input => input.resetValidation())\n      this.resetErrorBag()\n    },\n    register (input: VInputInstance) {\n      this.inputs.push(input)\n      this.watchers.push(this.watchInput(input))\n    },\n    unregister (input: VInputInstance) {\n      const found = this.inputs.find(i => i._uid === input._uid)\n\n      if (!found) return\n\n      const unwatch = this.watchers.find(i => i._uid === found._uid)\n      if (unwatch) {\n        unwatch.valid()\n        unwatch.shouldValidate()\n      }\n\n      this.watchers = this.watchers.filter(i => i._uid !== found._uid)\n      this.inputs = this.inputs.filter(i => i._uid !== found._uid)\n      this.$delete(this.errorBag, found._uid)\n    },\n  },\n\n  render (h): VNode {\n    return h('form', {\n      staticClass: 'v-form',\n      attrs: {\n        novalidate: true,\n        ...this.attrs$,\n      },\n      on: {\n        submit: (e: Event) => this.$emit('submit', e),\n      },\n    }, this.$slots.default)\n  },\n})\n"],"sourceRoot":""}